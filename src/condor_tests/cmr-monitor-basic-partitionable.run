#!/usr/bin/env perl
#testreq: personal

##**************************************************************
##
## Copyright (C) 1990-2018, Condor Team, Computer Sciences Department,
## University of Wisconsin-Madison, WI.
##
## Licensed under the Apache License, Version 2.0 (the "License"); you
## may not use this file except in compliance with the License.  You may
## obtain a copy of the License at
##
##    http://www.apache.org/licenses/LICENSE-2.0
##
## Unless required by applicable law or agreed to in writing, software
## distributed under the License is distributed on an "AS IS" BASIS,
## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
## See the License for the specific language governing permissions and
## limitations under the License.
##
##**************************************************************

use strict;
use warnings;

#
# This is a basic test to determine if Custom Machine Resource monitors are
# working properly with partitionable slots.  It also checks, since we may
# as well, that the monitor() metaknob is functioning properly.
#

use CondorTest;
use CondorUtils;
use CondorPersonal;

use CustomMachineResource;

#testreq: personal
my $config = <<CONDOR_TESTREQ_CONFIG;
NUM_CPUS = 16

MACHINE_RESOURCE_INVENTORY_SQUIDs = $(TEST_DIR)/cmr-squid-discovery
use feature : monitor( SQUIDs, Periodic, 10, $(TEST_DIR)/cmr-squid-monitor, SUM:SQUIDs )

SCHEDD_CLUSTER_INITIAL_VALUE = 2000

UPDATE_INTERVAL = 2
STARTER_UPDATE_INTERVAL = 2
SHADOW_QUEUE_UPDATE_INTERVAL = 2

NUM_SLOTS = 1
NUM_SLOTS_TYPE_1 = 1
SLOT_TYPE_1 = 100%
SLOT_TYPE_1_PARTITIONABLE = TRUE
CONDOR_TESTREQ_CONFIG
#endtestreq

my $testName = 'cmr_monitor_basic_partitionable';
my $testDescription = 'Custom Machine Resources - Monitor Test Basic (Partitionable)';

#
# Verify the configuration before running the test.
#
sleep(5);

CustomMachineResource::TestSlotAndSQUIDsCount( 1, $testName );

#
# Verify that the monitor's report is being read correctly.
#
CustomMachineResource::TestUptimeSQUIDsSeconds( $testName );

#
# Verify that we're computing the usage correctly.
#
exit( CustomMachineResource::TestSQUIDsUsage( $testName ) );
