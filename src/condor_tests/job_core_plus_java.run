#! /usr/bin/env perl
##**************************************************************
##
## Copyright (C) 1990-2007, Condor Team, Computer Sciences Department,
## University of Wisconsin-Madison, WI.
## 
## Licensed under the Apache License, Version 2.0 (the "License"); you
## may not use this file except in compliance with the License.  You may
## obtain a copy of the License at
## 
##    http://www.apache.org/licenses/LICENSE-2.0
## 
## Unless required by applicable law or agreed to in writing, software
## distributed under the License is distributed on an "AS IS" BASIS,
## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
## See the License for the specific language governing permissions and
## limitations under the License.
##
##**************************************************************

use CondorTest;
use CondorUtils;

$cmd = 'job_core_plus_java.cmd';
$testdesc =  'Condor_submit correctly places things into JobAds - java U';
$testname = "job_core_plus_java";

my $javainit = CondorTest::JavaInitialize($testname);
if($javainit == 0) {
	die "No java found\n";
}

$success = sub 
{
	my %info = @_;
	my $cluster = $info{"cluster"};
	my $job     = $info{"job"};
};

$died = sub 
{
	my %info = @_;
	my $expectedsig = $info{"job"}+1;
	my $gotsig      = $info{"signal"};
	my $error 		= $info{"error"};
};

my $alreadydone=0;
my $foundcount=0;

$execute = sub 
{
	my %args = @_;
	my $cluster = $args{"cluster"};

	# avoid reentrant death
	if($alreadydone != 0) 
	{
		return true;
	} 
	else 
	{
		$alreadydone = 1;
	}

	runcmd("condor_config_val -config");
	CondorTest::debug("Checking Job Ads for $cluster\n",1);
	my @adarray;
	my $status = 1;
	my $cmd = "condor_q -l $cluster";
	$status = CondorTest::runCondorTool($cmd,\@adarray,2,{emit_output=>0});
	if(!$status)
	{
		CondorTest::debug("Test failure due to Condor Tool Failure<$cmd>\n",1);
		exit(1)
	}
	foreach $line (@adarray)
	{
		if( $line =~ /^foo\s*=\s*"(.*)"\s*$/)
		{
			CondorTest::debug("************** $1 ************\n",1);
			$foundcount += 1;
		}
		elsif( $line =~ /^bar\s*=\s*"(.*)"\s*$/)
		{
			CondorTest::debug("************** $1 ************\n",1);
			$foundcount += 1;
		}
		elsif( $line =~ /^last\s*=\s*"(.*)"\s*$/)
		{
			CondorTest::debug("************** $1 ************\n",1);
			$foundcount += 1;
		}
		elsif( $line =~ /^done\s*=\s*(.*)\s*$/)
		{
			CondorTest::debug("************** $1 ************\n",1);
			$foundcount += 1;
		}
	}
	CondorTest::debug("Expect to see 4 attributes {foo,bar,last and done}\n",1);
	die "Missed some attributes: saw $foundcount of 4" unless $foundcount == 4;
};

CondorTest::RegisterExecute($testname, $execute);
CondorTest::RegisterExitedFailure( $testname, $died );
CondorTest::RegisterExitedSuccess( $testname, $success );

if( CondorTest::RunTest($testname, $cmd, 0) ) {
	CondorTest::debug("$testname: SUCCESS\n",1);
	exit(0);
} else {
	die "$testname: CondorTest::RunTest() failed\n";
}

