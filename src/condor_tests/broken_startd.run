#! /usr/bin/env perl
##**************************************************************
##
## Copyright (C) 1990-2007, Condor Team, Computer Sciences Department,
## University of Wisconsin-Madison, WI.
## 
## Licensed under the Apache License, Version 2.0 (the "License"); you
## may not use this file except in compliance with the License.  You may
## obtain a copy of the License at
## 
##    http://www.apache.org/licenses/LICENSE-2.0
## 
## Unless required by applicable law or agreed to in writing, software
## distributed under the License is distributed on an "AS IS" BASIS,
## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
## See the License for the specific language governing permissions and
## limitations under the License.
##
##**************************************************************

use Condor;
use CondorTest;
use Check::SimpleJob;
use Check::CondorLog;

#testreq: personal
my $config = <<CONDOR_TESTREQ_CONFIG;
  # values are CLEAR, CONTINUE, and ABORT, continue is the default
  # SLOT_CONFIG_FAILURE_MODE = continue

  # this should create a single dynamic slot with a broken EXECUTE dir
  SLOT1_EXECUTE = $(EXECUTE)/DoesNotExist
  use FEATURE : PartitionableSlot(1,50%)

  # this should try to create two type2 static slots but fail to create one of them
  use FEATURE : StaticSlots(2,2,40%)
CONDOR_TESTREQ_CONFIG
#endtestreq

my $testname = CondorTest::GetDefaultTestName();

TLOG("Checking for broken slots in daemon ad\n");

# we expect output to show two kinds of brokenness
# the pslot will be broken because of a bad execute dir
# and the slot_type2 will be broken becase we could only create 1 of that type
my @statout = ();
runCondorTool("condor_status -startd -broken",\@statout,2,{emit_output=>1});

my $ok_slot1=0;  # assume failure to find the expected message
my $ok_type2=0;  # assume failure to find the expected message
foreach my $line (@statout) {
	if ($line =~ /\s+slot1\s+/) {
		print "OK found : $line";
		$ok_slot1=1;
	} elsif ($line =~ /\s+slot_type2\s+/) {
		print "OK found : $line";
		$ok_type2=1;
	}
}
RegisterResult($ok_slot1, test_name=>$testname, check_name=>'broken_slot');
RegisterResult($ok_type2, test_name=>$testname, check_name=>'slot_type');

CondorTest::EndTest();
