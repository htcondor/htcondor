#! /usr/bin/env perl
##**************************************************************
##
## Copyright (C) 1990-2007, Condor Team, Computer Sciences Department,
## University of Wisconsin-Madison, WI.
## 
## Licensed under the Apache License, Version 2.0 (the "License"); you
## may not use this file except in compliance with the License.  You may
## obtain a copy of the License at
## 
##    http://www.apache.org/licenses/LICENSE-2.0
## 
## Unless required by applicable law or agreed to in writing, software
## distributed under the License is distributed on an "AS IS" BASIS,
## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
## See the License for the specific language governing permissions and
## limitations under the License.
##
##**************************************************************

use CondorTest;
use CondorUtils;
$cmd = 'job_dagman_dont_use_default_node_log.dag';
$testdesc =  'Condor submit dag - Turn off default node log test - scheduler U';
$testname = "job_dagman_dont_use_default_node_log";
$dagman_args = "-verbose";

# This is the file that should not exist at the end of execution
my $dontwatchlog = "${testname}.dag.nodes.log";
my $killedchosen = 0;

# truly const variables in perl
sub IDLE{1};
sub HELD{5};
sub RUNNING{2};

runcmd("rm -f $dontwatchlog");
runcmd("rm -f job_dagman_done_use_default_node_log.log");
runcmd("rm -f job_dagman_dont_use_default_node_log.dag.condor.sub");
runcmd("rm -f job_dagman_dont_use_default_node_log.dag.dagman.log");
runcmd("rm -f job_dagman_dont_use_default_node_log.dag.dagman.out");
runcmd("rm -f job_dagman_dont_use_default_node_log.dag.lib.err");
runcmd("rm -f job_dagman_dont_use_default_node_log.dag.lib.out");
runcmd("rm -f job_dagman_dont_use_default_node_log.dag.out");
runcmd("rm -f job_dagman_dont_use_default_node_log.err");
runcmd("rm -f job_dagman_dont_use_default_node_log.out");

$abnormal = sub 
{

	die "Want to see only submit, execute and successful completion\n";
};

$aborted = sub 
{
	die "Abort event NOT expected\n";
};

$held = sub 
{
	die "Held event NOT expected\n";
};

$executed = sub
{
	my %info = @_;

	CondorTest::debug("Good. We need the dag to run<$info{cluster}>\n",1);
};

$submitted = sub
{
	CondorTest::debug("submitted: This test will see submit, executing and successful completion\n",1);
};

$success = sub
{
	CondorTest::debug("executed successfully\n",1);
	die "Failed: $dontwatchlog should not have been created\n" if ( -e $dontwatchlog );

	CondorTest::debug("Verifying output\n",1);
	$diditpass = 1;

	# Check the dagman.out file for successful completion.
	$name = "job_dagman_dont_use_default_node_log.dag.dagman.out";
	$passed = 0;
	$canopen = open(OUT,"<$name");
	if( ! (defined $canopen)) {
		CondorTest::debug("Can not open logfile<$name>:$!\n",1);
		$diditpass = 0;
	}
	while(<OUT>) {
		chomp();
		$line = $_;

		if( $line =~ /Warning: setting DAGMAN_ALWAYS_USE_NODE_LOG to false is no longer recommended and will probably be disabled in a future version/ ) {
			CondorTest::debug("$name: $line\n",1);
			$passed = 1;
		}
	}
	close(OUT);
	if($passed == 1 ) {
		;
	} else {
		CondorTest::debug("FAILED $name: $line\n",1);
		$diditpass = 0;
	}

	if($diditpass == 0) {
		die "All expected files and correct output FAILED\n";
	}

};

CondorTest::RegisterExitedSuccess( $testname, $success);
CondorTest::RegisterExecute($testname, $executed);
CondorTest::RegisterExitedAbnormal( $testname, $abnormal );
CondorTest::RegisterAbort( $testname, $aborted );
CondorTest::RegisterHold( $testname, $held );
CondorTest::RegisterSubmit( $testname, $submitted );

if( CondorTest::RunDagTest($testname, $cmd, 0, $dagman_args) ) {
	CondorTest::debug("$testname: SUCCESS\n",1);
	exit(0);
} else {
	die "$testname: CondorTest::RunTest() failed\n";
}

