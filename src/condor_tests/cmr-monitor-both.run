#!/usr/bin/env perl

##**************************************************************
##
## Copyright (C) 1990-2018, Condor Team, Computer Sciences Department,
## University of Wisconsin-Madison, WI.
##
## Licensed under the Apache License, Version 2.0 (the "License"); you
## may not use this file except in compliance with the License.  You may
## obtain a copy of the License at
##
##    http://www.apache.org/licenses/LICENSE-2.0
##
## Unless required by applicable law or agreed to in writing, software
## distributed under the License is distributed on an "AS IS" BASIS,
## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
## See the License for the specific language governing permissions and
## limitations under the License.
##
##**************************************************************

use strict;
use warnings;

#
# This is a basic test to determine if the PEAK metrics of Custom Machine
# Resource monitors are working properly.
#

use CondorTest;
use CondorUtils;
use CondorPersonal;

use CustomMachineResource;

#testreq: personal
my $config = <<CONDOR_TESTREQ_CONFIG;
NUM_CPUS = 16

MACHINE_RESOURCE_INVENTORY_SQUIDs = $(TEST_DIR)/cmr-squid-discovery
use feature : monitor( SQUIDs, Periodic, 10, $(TEST_DIR)/cmr-squid-monitor-both, SUM:SQUIDs, PEAK:SQUIDsMemory )

SCHEDD_CLUSTER_INITIAL_VALUE = 5000

UPDATE_INTERVAL = 20
STARTER_UPDATE_INTERVAL = 20
SHADOW_QUEUE_UPDATE_INTERVAL = 20

CONDOR_TESTREQ_CONFIG
#endtestreq

my $testName = 'cmr_monitor_both';
my $testDescription = 'Custom Machine Resources - Monitor Test Usage & Memory';

#
# Verify the configuration before running the test.
#
sleep(5);
CustomMachineResource::TestSlotAndSQUIDsCount( 16, $testName );

#
# Verify that the monitor's report is being read correctly.
#
CustomMachineResource::TestUptimeSQUIDsSeconds( $testName );

#
# Verify that we're computing the usage correctly.
#
CustomMachineResource::TestSQUIDsUsage( $testName );

#
# Verify that we're computing the peak usage correctly.
#
exit( CustomMachineResource::TestSQUIDsMemoryUsage( $testName ) );
