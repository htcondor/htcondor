Source: condor
Maintainer: HTCondor Developers <htcondor-debian@cs.wisc.edu>
Uploaders: Tim Theisen <tim@cs.wisc.edu>
Section: science
Priority: extra
Build-Depends: cmake (>= 3.8),
               debhelper (>= 9~),
#if ! defined(PPC64LE)
               default-jdk | gcj-jdk,
#endif
               dh-python,
               dpkg,
               dpkg-dev,
               libboost-filesystem-dev,
               libboost-program-options-dev,
               libboost-python-dev,
               libboost-regex-dev,
               libboost-system-dev,
               libboost-test-dev,
               libboost-thread-dev,
               libcgroup-dev,
               libcurl4-openssl-dev | libcurl4-gnutls-dev,
               libkrb5-dev,
               libldap2-dev | libldap-dev,
               libmunge-dev,
               libpam0g-dev,
               libpcre2-dev,
               libpq-dev,
               libscitokens-dev,
               libsqlite3-dev,
               libvirt-dev,
               libx11-dev,
               libxml2-dev,
               libxss-dev,
               lsb-release,
               po-debconf,
               python3-dev,
               python3-setuptools,
               python3-sphinx,
               python3-sphinx-rtd-theme,
#if defined(FOCAL) || defined(JAMMY) || defined(BOOKWORM)
               python3-nbsphinx,
               python3-sphinx-autodoc-typehints,
#endif
               uuid-dev,
               voms-dev,
               zlib1g-dev
Build-Conflicts: liblog4cpp5-dev
Standards-Version: 3.9.8
Vcs-Browser: https://anonscm.debian.org/cgit/pkg-exppsy/condor.git
Vcs-Git: git://anonscm.debian.org/pkg-exppsy/condor.git
Homepage: https://htcondor.org
X-Python3-Version: >= 3.6


Package: htcondor
Architecture: any
Depends: adduser,
         debconf | debconf-2.0,
         libdate-manip-perl,
         python3,
         python3-requests,
         lsb-base (>= 3.0-6),
         libcom-err2,
         libgssapi-krb5-2,
         libk5crypto3,
         libkrb5-3,
         libkrb5support0,
         libmunge2,
#if defined(JAMMY) || defined(BOOKWORM)
         libssl3,
#else
         libssl1.1,
#endif
         libscitokens0 (>= 0.6.2),
         libvomsapi1v5,
         net-tools,
         ${misc:Depends},
         ${perl:Depends},
         ${python3:Depends},
         ${shlibs:Depends}
Recommends: openssh-server
Suggests: docker.io,
          coop-computing-tools,
          singularity-container,
          slurm-client
Provides: blahp
Conflicts: condor (<< ${binary:Version}),
           blahp
Breaks: condor (<< ${binary:Version})
Replaces: condor (<< ${binary:Version}),
          blahp
Description: distributed workload management system
 Like other full-featured batch systems, HTCondor provides a job queueing
 mechanism, scheduling policy, priority scheme, resource monitoring, and
 resource management. Users submit their serial or parallel jobs to HTCondor;
 HTCondor places them into a queue. It chooses when and where to run the jobs
 based upon a policy, carefully monitors their progress, and ultimately
 informs the user upon completion.
 .
 Unlike more traditional batch queueing systems, HTCondor can also effectively
 harness wasted CPU power from otherwise idle desktop workstations. HTCondor
 does not require a shared file system across machines - if no shared file
 system is available, HTCondor can transfer the job's data files on behalf of
 the user.
 .
 This package can set up an appropriate initial configuration at install
 time for a machine intended either as a member of an existing HTCondor pool
 or as a "Personal" (single machine) HTCondor pool.

Package: htcondor-dev
Architecture: any
Section: libdevel
Depends: ${misc:Depends},
         ${shlibs:Depends}
Conflicts: condor-dev (<< ${binary:Version})
Breaks: condor-dev (<< ${binary:Version})
Replaces: condor-dev (<< ${binary:Version})
Description: distributed workload management system - development files
 Like other full-featured batch systems, HTCondor provides a job queueing
 mechanism, scheduling policy, priority scheme, resource monitoring, and
 resource management. Users submit their serial or parallel jobs to HTCondor;
 HTCondor places them into a queue. It chooses when and where to run the jobs
 based upon a policy, carefully monitors their progress, and ultimately
 informs the user upon completion.
 .
 Unlike more traditional batch queueing systems, HTCondor can also effectively
 harness wasted CPU power from otherwise idle desktop workstations. HTCondor
 does not require a shared file system across machines - if no shared file
 system is available, HTCondor can transfer the job's data files on behalf of
 the user.
 .
 This package provides headers and libraries for development of HTCondor
 add-ons.

Package: htcondor-doc
Architecture: all
Section: doc
Depends: ${misc:Depends}
Conflicts: condor-doc (<< ${binary:Version})
Breaks: condor-doc (<< ${binary:Version})
Replaces: condor-doc (<< ${binary:Version})
Description: distributed workload management system - documentation
 Like other full-featured batch systems, HTCondor provides a job queueing
 mechanism, scheduling policy, priority scheme, resource monitoring, and
 resource management. Users submit their serial or parallel jobs to HTCondor;
 HTCondor places them into a queue. It chooses when and where to run the jobs
 based upon a policy, carefully monitors their progress, and ultimately
 informs the user upon completion.
 .
 Unlike more traditional batch queueing systems, HTCondor can also effectively
 harness wasted CPU power from otherwise idle desktop workstations. HTCondor
 does not require a shared file system across machines - if no shared file
 system is available, HTCondor can transfer the job's data files on behalf of
 the user.
 .
 This package provides HTCondor's documentation in HTML and PDF format, as well
 as configuration and other examples.

Package: minihtcondor
Architecture: all
Section: science
Depends: htcondor (= ${binary:Version}),
         ${misc:Depends}
Description: distributed workload management system - single node configuration
 Like other full-featured batch systems, HTCondor provides a job queueing
 mechanism, scheduling policy, priority scheme, resource monitoring, and
 resource management. Users submit their serial or parallel jobs to HTCondor;
 HTCondor places them into a queue. It chooses when and where to run the jobs
 based upon a policy, carefully monitors their progress, and ultimately
 informs the user upon completion.
 .
 Unlike more traditional batch queueing systems, HTCondor can also effectively
 harness wasted CPU power from otherwise idle desktop workstations. HTCondor
 does not require a shared file system across machines - if no shared file
 system is available, HTCondor can transfer the job's data files on behalf of
 the user.
 .
 This package provides an example configuration is good for trying out HTCondor
 for the first time. It only configures the IPv4 loopback address, turns on
 basic security, and shortens many timers to be more responsive.

Package: htcondor-annex-ec2
Architecture: all
Section: science
Depends: htcondor (= ${binary:Version}),
         ${misc:Depends}
Description: distributed workload management system - single node configuration
 Like other full-featured batch systems, HTCondor provides a job queueing
 mechanism, scheduling policy, priority scheme, resource monitoring, and
 resource management. Users submit their serial or parallel jobs to HTCondor;
 HTCondor places them into a queue. It chooses when and where to run the jobs
 based upon a policy, carefully monitors their progress, and ultimately
 informs the user upon completion.
 .
 Unlike more traditional batch queueing systems, HTCondor can also effectively
 harness wasted CPU power from otherwise idle desktop workstations. HTCondor
 does not require a shared file system across machines - if no shared file
 system is available, HTCondor can transfer the job's data files on behalf of
 the user.
 .
 This package provides configuration and script to make an EC2 image
 annex-compatible.  Do NOT install on a non-EC2 image.

Package: htcondor-upgrade-checks
Architecture: all
Section: science
Depends: htcondor,
         pcre2-utils,
         ${misc:Depends}
Description: distributed workload management system - single node configuration
 Like other full-featured batch systems, HTCondor provides a job queueing
 mechanism, scheduling policy, priority scheme, resource monitoring, and
 resource management. Users submit their serial or parallel jobs to HTCondor;
 HTCondor places them into a queue. It chooses when and where to run the jobs
 based upon a policy, carefully monitors their progress, and ultimately
 informs the user upon completion.
 .
 Unlike more traditional batch queueing systems, HTCondor can also effectively
 harness wasted CPU power from otherwise idle desktop workstations. HTCondor
 does not require a shared file system across machines - if no shared file
 system is available, HTCondor can transfer the job's data files on behalf of
 the user.
 .
 HTCondor V9 to V10 check for for known breaking changes:
 1. IDToken TRUST_DOMAIN default value change
 2. Upgrade to PCRE2 breaking map file regex sequences
 3. The way to request GPU resources for a job

Package: htcondor-tarball
Architecture: any
Section: science
Depends: htcondor (= ${binary:Version}),
         ${misc:Depends}
Description: distributed workload management system - single node configuration
 Like other full-featured batch systems, HTCondor provides a job queueing
 mechanism, scheduling policy, priority scheme, resource monitoring, and
 resource management. Users submit their serial or parallel jobs to HTCondor;
 HTCondor places them into a queue. It chooses when and where to run the jobs
 based upon a policy, carefully monitors their progress, and ultimately
 informs the user upon completion.
 .
 Unlike more traditional batch queueing systems, HTCondor can also effectively
 harness wasted CPU power from otherwise idle desktop workstations. HTCondor
 does not require a shared file system across machines - if no shared file
 system is available, HTCondor can transfer the job's data files on behalf of
 the user.
 .
 This package provides files needed to create a stand-alone HTCondor tarball.

Package: htcondor-test
Architecture: any
Section: science
Depends: htcondor (= ${binary:Version}),
         ${misc:Depends}
Description: distributed workload management system - single node configuration
 Like other full-featured batch systems, HTCondor provides a job queueing
 mechanism, scheduling policy, priority scheme, resource monitoring, and
 resource management. Users submit their serial or parallel jobs to HTCondor;
 HTCondor places them into a queue. It chooses when and where to run the jobs
 based upon a policy, carefully monitors their progress, and ultimately
 informs the user upon completion.
 .
 Unlike more traditional batch queueing systems, HTCondor can also effectively
 harness wasted CPU power from otherwise idle desktop workstations. HTCondor
 does not require a shared file system across machines - if no shared file
 system is available, HTCondor can transfer the job's data files on behalf of
 the user.
 .
 This package provides files needed to run tests against the extracted tarball
 in the BaTLab.

Package: htcondor-dbg
Architecture: any
Section: debug
Depends: htcondor (= ${binary:Version}),
         ${misc:Depends}
Conflicts: condor-dbg (<< ${binary:Version})
Breaks: condor-dbg (<< ${binary:Version})
Replaces: condor-dbg (<< ${binary:Version})
Description: distributed workload management system - debugging symbols
 Like other full-featured batch systems, HTCondor provides a job queueing
 mechanism, scheduling policy, priority scheme, resource monitoring, and
 resource management. Users submit their serial or parallel jobs to HTCondor;
 HTCondor places them into a queue. It chooses when and where to run the jobs
 based upon a policy, carefully monitors their progress, and ultimately
 informs the user upon completion.
 .
 Unlike more traditional batch queueing systems, HTCondor can also effectively
 harness wasted CPU power from otherwise idle desktop workstations. HTCondor
 does not require a shared file system across machines - if no shared file
 system is available, HTCondor can transfer the job's data files on behalf of
 the user.
 .
 This package provides the debugging symbols for HTCondor.

