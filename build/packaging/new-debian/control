Source: condor
Maintainer: HTCondor Developers <condor-debian@cs.wisc.edu>
Uploaders: Michael Hanke <mih@debian.org>,
           Tim Theisen <tim@cs.wisc.edu>
Section: science
Priority: extra
Build-Depends: autotools-dev,
               bison,
               chrpath,
               cmake,
               debhelper (>= 9~),
               default-jdk | gcj-jdk,
               dh-autoreconf,
               dh-python,
               flex,
               help2man,
               libboost-filesystem-dev,
               libboost-program-options-dev,
               libboost-python-dev,
               libboost-regex-dev,
               libboost-system-dev,
               libboost-test-dev,
               libboost-thread-dev,
               libcgroup-dev,
               libcurl4-openssl-dev | libcurl4-gnutls-dev,
               libexpat1-dev,
               libkrb5-dev,
               libldap2-dev | libldap-dev,
               libmunge-dev,
               libpam0g-dev,
               libpcre3-dev,
               libpq-dev,
               libscitokens-dev,
               libsqlite3-dev,
               libvirt-dev,
               libx11-dev,
               libxml2-dev,
               libxss-dev,
               po-debconf,
               python-dev,
               python-setuptools,
               python3-setuptools,
               python-sphinx,
               python-sphinx-rtd-theme,
               python3-all-dev,
               uuid-dev,
               voms-dev,
               zlib1g-dev
Build-Conflicts: liblog4cpp5-dev
Standards-Version: 3.9.8
Vcs-Browser: https://anonscm.debian.org/cgit/pkg-exppsy/condor.git
Vcs-Git: git://anonscm.debian.org/pkg-exppsy/condor.git
Homepage: http://research.cs.wisc.edu/htcondor

Package: htcondor
Architecture: any
Depends: adduser,
         debconf | debconf-2.0,
         libdate-manip-perl,
         python,
         python-requests,
         lsb-base (>= 3.0-6),
         libclassad15 (= ${binary:Version}),
         blahp (>= 2.2.0),
         libcom-err2,
         libgssapi-krb5-2,
         libk5crypto3,
         libkrb5-3,
         libkrb5support0,
         libmunge2,
         libssl1.1,
         libscitokens0 (>= 0.6.2),
         libvomsapi1v5,
         net-tools,
         ${misc:Depends},
         ${perl:Depends},
         ${python:Depends},
         ${shlibs:Depends}
Recommends: ecryptfs-utils,
            openssh-server
Suggests: docker.io,
          coop-computing-tools,
          singularity-container,
          slurm-client
Conflicts: condor (<< ${binary:Version})
Breaks: condor (<< ${binary:Version})
Replaces: condor (<< ${binary:Version})
Description: distributed workload management system
 Like other full-featured batch systems, HTCondor provides a job queueing
 mechanism, scheduling policy, priority scheme, resource monitoring, and
 resource management. Users submit their serial or parallel jobs to HTCondor;
 HTCondor places them into a queue. It chooses when and where to run the jobs
 based upon a policy, carefully monitors their progress, and ultimately
 informs the user upon completion.
 .
 Unlike more traditional batch queueing systems, HTCondor can also effectively
 harness wasted CPU power from otherwise idle desktop workstations. HTCondor
 does not require a shared file system across machines - if no shared file
 system is available, HTCondor can transfer the job's data files on behalf of
 the user.
 .
 This package can set up an appropriate initial configuration at install
 time for a machine intended either as a member of an existing HTCondor pool
 or as a "Personal" (single machine) HTCondor pool.

Package: htcondor-dev
Architecture: any
Section: libdevel
Depends: ${misc:Depends},
         ${shlibs:Depends}
Conflicts: condor-dev (<< ${binary:Version})
Breaks: condor-dev (<< ${binary:Version})
Replaces: condor-dev (<< ${binary:Version})
Description: distributed workload management system - development files
 Like other full-featured batch systems, HTCondor provides a job queueing
 mechanism, scheduling policy, priority scheme, resource monitoring, and
 resource management. Users submit their serial or parallel jobs to HTCondor;
 HTCondor places them into a queue. It chooses when and where to run the jobs
 based upon a policy, carefully monitors their progress, and ultimately
 informs the user upon completion.
 .
 Unlike more traditional batch queueing systems, HTCondor can also effectively
 harness wasted CPU power from otherwise idle desktop workstations. HTCondor
 does not require a shared file system across machines - if no shared file
 system is available, HTCondor can transfer the job's data files on behalf of
 the user.
 .
 This package provides headers and libraries for development of HTCondor
 add-ons.

Package: htcondor-doc
Architecture: all
Section: doc
Depends: ${misc:Depends}
Conflicts: condor-doc (<< ${binary:Version})
Breaks: condor-doc (<< ${binary:Version})
Replaces: condor-doc (<< ${binary:Version})
Description: distributed workload management system - documentation
 Like other full-featured batch systems, HTCondor provides a job queueing
 mechanism, scheduling policy, priority scheme, resource monitoring, and
 resource management. Users submit their serial or parallel jobs to HTCondor;
 HTCondor places them into a queue. It chooses when and where to run the jobs
 based upon a policy, carefully monitors their progress, and ultimately
 informs the user upon completion.
 .
 Unlike more traditional batch queueing systems, HTCondor can also effectively
 harness wasted CPU power from otherwise idle desktop workstations. HTCondor
 does not require a shared file system across machines - if no shared file
 system is available, HTCondor can transfer the job's data files on behalf of
 the user.
 .
 This package provides HTCondor's documentation in HTML and PDF format, as well
 as configuration and other examples.

Package: minihtcondor
Architecture: all
Section: science
Depends: htcondor (= ${binary:Version}),
         ${misc:Depends}
Description: distributed workload management system - single node configuration
 Like other full-featured batch systems, HTCondor provides a job queueing
 mechanism, scheduling policy, priority scheme, resource monitoring, and
 resource management. Users submit their serial or parallel jobs to HTCondor;
 HTCondor places them into a queue. It chooses when and where to run the jobs
 based upon a policy, carefully monitors their progress, and ultimately
 informs the user upon completion.
 .
 Unlike more traditional batch queueing systems, HTCondor can also effectively
 harness wasted CPU power from otherwise idle desktop workstations. HTCondor
 does not require a shared file system across machines - if no shared file
 system is available, HTCondor can transfer the job's data files on behalf of
 the user.
 .
 This package provides an example configuration is good for trying out HTCondor
 for the first time. It only configures the IPv4 loopback address, turns on
 basic security, and shortens many timers to be more responsive.

Package: htcondor-annex-ec2
Architecture: all
Section: science
Depends: htcondor (= ${binary:Version}),
         ${misc:Depends}
Description: distributed workload management system - single node configuration
 Like other full-featured batch systems, HTCondor provides a job queueing
 mechanism, scheduling policy, priority scheme, resource monitoring, and
 resource management. Users submit their serial or parallel jobs to HTCondor;
 HTCondor places them into a queue. It chooses when and where to run the jobs
 based upon a policy, carefully monitors their progress, and ultimately
 informs the user upon completion.
 .
 Unlike more traditional batch queueing systems, HTCondor can also effectively
 harness wasted CPU power from otherwise idle desktop workstations. HTCondor
 does not require a shared file system across machines - if no shared file
 system is available, HTCondor can transfer the job's data files on behalf of
 the user.
 .
 This package provides configuration and script to make an EC2 image
 annex-compatible.  Do NOT install on a non-EC2 image.

Package: htcondor-tarball
Architecture: any
Section: science
Depends: htcondor (= ${binary:Version}),
         ${misc:Depends}
Description: distributed workload management system - single node configuration
 Like other full-featured batch systems, HTCondor provides a job queueing
 mechanism, scheduling policy, priority scheme, resource monitoring, and
 resource management. Users submit their serial or parallel jobs to HTCondor;
 HTCondor places them into a queue. It chooses when and where to run the jobs
 based upon a policy, carefully monitors their progress, and ultimately
 informs the user upon completion.
 .
 Unlike more traditional batch queueing systems, HTCondor can also effectively
 harness wasted CPU power from otherwise idle desktop workstations. HTCondor
 does not require a shared file system across machines - if no shared file
 system is available, HTCondor can transfer the job's data files on behalf of
 the user.
 .
 This package provides files needed to create a stand-alone HTCondor tarball.

Package: htcondor-test
Architecture: all
Section: science
Depends: htcondor (= ${binary:Version}),
         ${misc:Depends}
Description: distributed workload management system - single node configuration
 Like other full-featured batch systems, HTCondor provides a job queueing
 mechanism, scheduling policy, priority scheme, resource monitoring, and
 resource management. Users submit their serial or parallel jobs to HTCondor;
 HTCondor places them into a queue. It chooses when and where to run the jobs
 based upon a policy, carefully monitors their progress, and ultimately
 informs the user upon completion.
 .
 Unlike more traditional batch queueing systems, HTCondor can also effectively
 harness wasted CPU power from otherwise idle desktop workstations. HTCondor
 does not require a shared file system across machines - if no shared file
 system is available, HTCondor can transfer the job's data files on behalf of
 the user.
 .
 This package provides files needed to run tests against the extracted tarball
 in the BaTLab.

Package: htcondor-dbg
Architecture: any
Section: debug
Depends: htcondor (= ${binary:Version}),
         ${misc:Depends}
Conflicts: condor-dbg (<< ${binary:Version})
Breaks: condor-dbg (<< ${binary:Version})
Replaces: condor-dbg (<< ${binary:Version})
Description: distributed workload management system - debugging symbols
 Like other full-featured batch systems, HTCondor provides a job queueing
 mechanism, scheduling policy, priority scheme, resource monitoring, and
 resource management. Users submit their serial or parallel jobs to HTCondor;
 HTCondor places them into a queue. It chooses when and where to run the jobs
 based upon a policy, carefully monitors their progress, and ultimately
 informs the user upon completion.
 .
 Unlike more traditional batch queueing systems, HTCondor can also effectively
 harness wasted CPU power from otherwise idle desktop workstations. HTCondor
 does not require a shared file system across machines - if no shared file
 system is available, HTCondor can transfer the job's data files on behalf of
 the user.
 .
 This package provides the debugging symbols for HTCondor.

Package: libclassad-dev
Architecture: any
Section: libdevel
Depends: libclassad15 (= ${binary:Version}),
         ${misc:Depends}
Conflicts: libclassad0-dev
Replaces: libclassad0-dev
Description: HTCondor classads expression language - development library
 Classified Advertisements (classads) are the lingua franca of HTCondor, used
 for describing jobs, workstations, and other resources. There is a protocol
 for evaluating whether two classads match, which is used by the HTCondor
 central manager to determine the compatibility of jobs, and workstations where
 they may be run.
 .
 This package provides the static library and header files.

Package: libclassad15
Architecture: any
Section: libs
Depends: ${misc:Depends},
         ${shlibs:Depends}
Description: HTCondor classads expression language - runtime library
 Classified Advertisements (classads) are the lingua franca of HTCondor, used
 for describing jobs, workstations, and other resources. There is a protocol
 for evaluating whether two classads match, which is used by the HTCondor
 central manager to determine the compatibility of jobs, and workstations where
 they may be run.
 .
 This package provides the runtime library.

Package: condor
Architecture: all
Section: oldlibs
Depends: htcondor (= ${binary:Version}),
         ${misc:Depends}
Description: transitional dummy package
 This package aids upgrades of existing Condor installations to the new project
 and package name "HTCondor". The package is empty and it can safely be
 removed.

Package: condor-doc
Architecture: all
Section: oldlibs
Depends: htcondor-doc (= ${binary:Version}),
         ${misc:Depends}
Description: transitional dummy package
 This package aids upgrades of existing Condor installations to the new project
 and package name "HTCondor". The package is empty and it can safely be
 removed.

Package: condor-dev
Architecture: all
Section: oldlibs
Depends: htcondor-dev (= ${binary:Version}),
         ${misc:Depends}
Description: transitional dummy package
 This package aids upgrades of existing Condor installations to the new project
 and package name "HTCondor". The package is empty and it can safely be
 removed.

Package: condor-dbg
Architecture: all
Section: oldlibs
Depends: htcondor-dbg (= ${binary:Version}),
         ${misc:Depends}
Description: transitional dummy package
 This package aids upgrades of existing Condor installations to the new project
 and package name "HTCondor". The package is empty and it can safely be
 removed.
