*** 25.3.0 features

- :tool:`condor_watch_q` will now display for total number of jobs for
  clusters using late materialization.
  :jira:`3164`

- When a job has a :subcom:`transfer_output_remaps` that maps to an
  absolute path, HTCondor will now create any missing intermediate
  directories in that path, if allowed by the user's permissions.
  :jira:`3318`

- Docker universe jobs now correctly report CPU and memory usage when the
  docker server is installed in a non-standard place, pointed at with 
  the DOCKER_HOST environment variable, such as with a docker-in-docker setup.
  :jira:`3280`

- More accurately report the reason why a job's execution is interrupted
  (via the evict log event and VacateReason job attribute).
  :jira:`3295`

- Removed option to have the *condor_schedd* send claim lease keep-alives.
  Now, the *condor_startd* always sends the keep-alives, which was the
  default.
  :jira:`3312`

- Add a python bindings function to reload the ClassAd usermaps and to load
  a specific usermap for use with the ``userMap`` ClassAd function.
  :jira:`3274`

- For **batch** grid :subcom:`universe` jobs, the PATH environment variable
  is now used by default to locate the tools of the destination batch
  scheduler.
  You can specify a specific directory where the tools are located by setting
  the appropriate binpath variable in the ``blah.config`` file
  (e.g. ``slurm_binpath=/opt/slurm/bin``).
  :jira:`3326`

- The *condor_starter* can now refresh job credentials and respond to 
  commands while doing output file transfers.
  :jira:`3259`
  
*** 25.3.0 bugs

*** 25.0.3 features

- Added a new EP configuration knob, :macro:`DOCKER_TRUST_LOCAL_IMAGES`
  which defaults to false.  Setting this to true allows users to run
  docker images which have been prestaged in the EPs docker cache even
  if the image does not exist in a repository, or if the user does not
  have permission to pull from that repository.
  :jira:`3315`

*** 25.0.3 bugs

- Calling ``classad2.ExprTree(None)`` no longer results in an invalid
  :class:`classad2.ExprTree`, preventing segfaults when using the object.
  :jira:`3319`

- Fixed a bug where if input file transfer failed, occasionally no
  descriptive error message about the failure would make it back
  into the job hold reason.
  :jira:`3327`

- Fixed a bug where :tool:`condor_history` could take many minutes to read a single line
  from the history file when the line is many megabytes long. This was causing
  ingestion of epoch ads into a database to timeout.
  :jira:`3299`

- Fixed a very longstanding bug where extremely fast machines would
  overflow a 32 bit counter and return -1 for the :ad-attr:`KFlops`
  slot attribute.
  :jira:`3288`

*** 25.2.1 features

- A job can now specify both an initial value for :subcom:`request_memory`
  and a retry with a larger memory request if the job uses more memory than the initial request.
  The default value for :subcom:`request_memory` and for :subcom:`request_disk`
  have been changed so that jobs will no longer default to trying to grow the request
  based on previous usage.
  :jira:`3227`

- Improved DAGMan to allow :dag-cmd:`SUBMIT-DESCRIPTION`\'s to be declared
  after nodes that reference the named inline submit description.
  :jira:`3230`

- DAGMan will now output a structured message for job submission failures
  to the debug log file. This message is formatted similarly to the read
  userlog job event message.
  :jira:`3257`

- Added new DAGMan Post :dag-cmd:`SCRIPT` macro to provide exit code for each
  job associated with a node. This is in the form of a comma separated list.
  :jira:`3245`

- The *condor_credmon_local* can now use RSA-based (RS256) keys to generate
  tokens by setting :macro:`LOCAL_CREDMON_PRIVATE_KEY_ALGORITHM` to ``RS256``.
  :jira:`3266`

- Added the ability to set a ClassAd expression in
  :macro:`LOCAL_CREDMON_AUTHZ_TEMPLATE_EXPR` to define scopes for tokens
  generated by the *condor_credmon_local*.
  :jira:`3261`

- Added new fine grained attributes :ad-attr:`NumPendingClaimsInQueue` and
  :ad-attr:`NumPendingClaimsInContact` to the *condor_schedd* record.
  :jira:`3125`

*** 25.2.1 bugs

- Fixed a problem where setting :macro:`MAX_FILE_TRANSFER_PLUGIN_LIFETIME`
  to longer than :macro:`STARTER_FILE_XFER_STALL_TIMEOUT` would prevent the
  logging of output for hung file-transfer plug-ins.
  :jira:`3202`

- The ``gpu`` and ``gpu-debug`` queues at Anvil are no longer represented in
  :tool:`htcondor annex` as whole-node queues, fixing a problem where the
  "whole node" would have 4 GPUs and only 1 CPU.
  :jira:`3324`

*** 25.0.2 bugs

- Fixed a bug causing some file-transfer plug-ins (box, gdrive, and onedrive)
  to fail immediately on start-up.
  :jira:`3317`

- Fixed bug where when :macro:`SINGULARITY_TARGET_DIR` was set and
  :macro:`STARTER_NESTED_SCRATCH` was also set, then some environment
  variables that pointed into the job's execute directory were not correct.
  :jira:`3265`

*** 25.1.0 features

*** 25.1.0 bugs

*** 25.0.1 features

- New implementations of the Python bindings, ``htcondor2`` and ``classad2``. This
  re-implementation of the Python bindings fixes short-comings in the original
  implementation and eases future maintenance.
  :jira:`2153`

- The original implementation of the Python bindings has been removed.
  To use the new Python bindings, please read the
  :doc:`migration guide <../apis/python-bindings/api/version2/migration-guide>`.
  :jira:`3240`

*** 25.0.1 bugs

- Fixed a bug where *condor_qusers* would treat the ``add`` option as ``enable``
  when the leading dash was omitted.
  :jira:`3284`

