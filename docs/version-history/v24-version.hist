*** 24.7.2 features

- Add :tool:`htcondor annex login` verb, which opens a shared SSH connection to
  the named HPC system.  If you've recently created or added an annex at a
  particular system, it will re-use that connection; otherwise, you'll have
  to login again, but that connection will then be re-usable by other
  :tool:`htcondor annex` commands.
  :jira:`2809`

- Added the ability for a docker universe job to fetch an authenticated
  image from the docker repository.
  :jira:`2870`

- Added the ability for an EP administator to disable access to the network
  by a job, by setting :macro:`NO_JOB_NETWORKING` to true.
  :jira:`2967`

- Jobs that use :subcom:`concurrency_limits` can now re-use claims in
  the schedd.
  :jira:`2937`

- Enhanced :tool:`htcondor job status` to also show the time to transfer the
  job input sandbox.
  :jira:`2959`

- Added :ad-attr:`OSHomeDir` to starter's copy of the job ad.
  :jira:`2972`

- Updated :tool:`htcondor annex` to work with Expanse's new requirements for its
  ``gpu`` and ``gpu-shared`` queues.
  :jira:`2634`

- Added :subcom:`shell` for Linux systems.
  :jira:`2918`

- :macro:`START_VANILLA_UNIVERSE` expressions may now refer to attributes
  in the schedd add using the prefix ``SCHEDD``.
  :jira:`2919`

- Add :macro:`SYSTEM_MAX_RELEASES` which implements an upper bound on the number
  of times any job can be released by a user or periodic expression.
  :jira:`2926`

- Hold messages generated by failure to transfer output now include how many
  files failed to transfer.
  :jira:`2903`

- Added ``-transfer-history`` flag to :tool:`condor_history` to query historical
  Input, Output, and Checkpoint transfer ClassAds stored in the :macro:`JOB_EPOCH_HISTORY`
  files.
  :jira:`2878`

- Improved the parsing and handling of syntax errors in the
  :subcom:`transfer_output_remaps` submit command.
  :jira:`2920`

- DAGMan :dag-cmd:`SERVICE` nodes will no longer be removed automatically when
  a DAG contains a :dag-cmd:`FINAL` node and :tool:`condor_rm` is used on the
  DAGMan scheduler job.
  :jira:`2938`

- The list of files generated by the :subcom:`manifest` submit command now
  recursively includes subdirectories.
  :jira:`2903`

- Added new option ``-extract`` to :tool:`condor_history` to copy historical
  ClassAd entries that match a provided constraint to a specified file.
  :jira:`2923`

- Improved the ability of *condor_who* to query *condor_startd* processes when
  *condor_who* is running as root or as the same user as the Startd, and added
  formatting options for use when the *condor_startd* is running as a job on
  another batch system.
  :jira:`2927`

- EPs using disk enforcement via LVM and :macro:`LVM_HIDE_MOUNT` = ``True``
  will now advertise :ad-attr:`HasVM` = ``False`` due to VM universe jobs being
  incompatible with mount namespaces.
  :jira:`2945`

- Added support for running Docker universe on ARM hosts
  :jira:`2906`

- :tool:`htcondor credential add oauth2` can now be used to store tokens that can
  be used by jobs via *use_oauth_services*.
  The user is responsible for updating tokens that can expire.
  :jira:`2803`

- The CLAIMTOBE authentication protocol now fully qualified user names
  with the system's $(UID_DOMAIN).  To revert to the former semantics,
  set :macro:`SEC_CLAIMTOBE_INCLUDE_DOMAIN` to false.
  :jira:`2915`

- The default value for :macro:`DISABLE_SWAP_FOR_JOB` has been changed to
  ``True``.  This provides a more predictable and uniform user experience
  for jobs running on different EPs.
  :jira:`2960`

- Improved :tool:`condor_watch_q` to display information about the number of
  jobs actively transferring input or output files.
  :jira:`2958`

*** 24.7.2 bugs

- Fixed bug where DAGMan would output an error message containing garbage
  when dumping failed node information to the debug log.
  :jira:`2899`

- Fixed a bug where EP's using :macro:`STARTD_ENFORCE_DISK_LIMITS` would mark a
  slot as ``broken`` when the *condor_starter* fails to remove the ephemeral logical
  volume but the *condor_startd* successfully removes the LV.
  :jira:`2953`

- Fixed a bug in the Vault credential monitor that kept credentials from being fetched
  if :macro:`VAULT_CREDMON_PROVIDER_NAMES` was unset. Introduced in HTCondor 24.3.0.
  :jira:`2912`

- Fixed a bug in the local issuer credential monitor that kept credentials from being
  issued if :macro:`LOCAL_CREDMON_TOKEN_VERSION` (or named variant) was not set.
  :jira:`2965`

- Fixed a bug in the local issuer credential monitor that prevented the issuance of tokens
  using the WLCG profile.
  :jira:`2954`

*** 24.0.7 features

- The *condor_startd* now distributes the :ad-attr:`LoadAvg` assigned to a partitionable slot
  to the idle resources of the partitionable slot, and then to the dynamic slots.
  Machines that have only a single partitionable slot will now have the same behavior under
  a DESKTOP policy as they did in version 23.10.18 and 24.0.1.
  :jira:`2901`

*** 24.0.7 bugs

- When using delegated cgroup v2, HTCondor no longer reports that that main job (often a pilot)
  has an out of memory condition when only the sub-job has hit an oom.
  :jira:`2944`

*** 24.5.2 bugs

- The default value for :macro:`STARTD_LEFTOVER_PROCS_BREAK_SLOTS` has been
  changed to 'False'. When 'True', the EP was erroneously marking slots as
  broken.
  :jira:`2946`

*** 24.5.1 features

- The *condor_starter* now advertise :ad-attr:`StdoutMtime` and :ad-attr:`StderrMtime`
  which represent the most recent modification time, in seconds since the epoch
  of a job which uses file transfer.
  :jira:`2837`

- The *condor_startd*, when running on a machine with Nvidia gpus, now advertises
  Nvidia driver version.
  :jira:`2856`

- Increased the default width of :tool:`condor_qusers` output when redirected to a
  file or piped to another command to prevent truncation.
  :jira:`2861`

- The *condor_startd* will now never lose track and leak logical volumes that were failed
  to be cleaned up when using :macro:`STARTD_ENFORCE_DISK_LIMITS`. The *condor_startd*
  will now periodically retry removal of logical volumes with an exponential backoff.
  :jira:`2852`

- The *condor_startd* will now keep dynamic slots that have a :ad-attr:`SlotBrokenReason`
  attribute in ``Unclaimed`` state rather than deleting them when they change state
  to ``Unclaimed``.  A new configuration variable :macro:`CONTINUE_TO_ADVERTISE_BROKEN_DYNAMIC_SLOTS`
  controls this behavior.  It defaults to ``true`` but can be set to ``false`` to preserve
  the old behavior.  This change also adds a new attribute :ad-attr:`BrokenContextAds`
  to the daemon ad of the *condor_startd*. This attribute has a classad for each broken resource
  in the startd.  *condor_status* has been enhanced to use this new attribute to display
  more information about the context of broken resources when both ``-startd`` and ``-broken``
  arguments are used.
  :jira:`2844`

- The *condor_startd* will now permanently reduce the total slot resources advertised by
  a partitionable slot when a dynamic slot is deleted while it is marked as broken. The
  amount of reduction will be advertised in new attributes such as ad-attr:`BrokenSlotCpus`
  so that the original size of the slot can be computed.
  :jira:`2865`

- Daemons will now more quickly discover with a non-responsive
  *condor_collector* has recovered and resume advertising to it.
  :jira:`2605`

- Jobs can now request user credentials generated by any combination of the
  OAuth2, Local Issuer, and Vault credential monitors on the AP.
  Remote submitters can request these credentials without having any of the
  CREDMON-related parameters in their configuration files.
  :jira:`2851`

*** 24.5.1 bugs

- Fixed a bug where the *condor_gridmanager* would write to log file
  `GridmanagerLog.root` after a reconfig.
  :jira:`2846`

- ``htcondor annex shutdown`` now works again.
  :jira:`2808`

- Fixed a bug where the job state table DAGMan prints to its debug file could
  contain a negative number for the count of failed jobs.
  :jira:`2872`

*** 24.0.5 bugs

*** 24.4.0 features

- Improved validation and cleanup of :macro:`EXECUTE` directories.
  The :macro:`EXECUTE` directory must now be owned by the *condor* user
  when the daemons are started as root. The condor_startd will
  not attempt to clean an invalid :macro:`EXECUTE` directory nor will
  it alter the file permissions of an :macro:`EXECUTE` directory.
  :jira:`2789`

- For **batch** grid :subcom:`universe` jobs, the PATH environment variable values
  from the job ad and the worker node environment are now combined.
  Previously, only the PATH value from the job ad was used.
  The old behavior can be restored by setting ``blah_merge_paths=no`` in
  the ``blah.config`` file.
  :jira:`2793`

- Many small improvements to :tool:`condor_q` ``-analyze`` and ``-better-analyze``
  for pools that use partitionable slots.  As a part of this, the *condor_schedd*
  was changed to provide match information for the autocluster of
  the job being analyzed, which :tool:`condor_q` will report if it is available.
  :jira:`2720`

- The *condor_startd* now advertises a new attribute,
  :ad-attr:`SingularityUserNamespaces` which is ``true`` when apptainer
  or singularity work and are using Linux user namespaces, and ``false``
  when it is using setuid mode.
  :jira:`2818`

- The *condor_startd* daemon ad now contains attributes showing the average and total
  bytes transferred to and from jobs during its lifetime.
  :jira:`2721`

- The *condor_credd* daemon no longer listens on port ``9620`` by default,
  but rather uses the *condor_shared_port* daemon.
  :jira:`2763`

- DAGMan will now periodically print a table regarding states of
  job placed to the Access Point to the debug log (``*.dagman.out``).
  The rate at which this table in printed is dictated by
  :macro:`DAGMAN_PRINT_JOB_TABLE_INTERVAL`
  :jira:`2794`

*** 24.4.0 bugs

- Changed the numeric output of :tool:`htcondor job status` so that the rounding
  to megabytes, gigabytes, etc. matches the binary definitions the rest
  of the tools use.
  :jira:`2788`

*** 24.0.4 features

- For **arc** grid :subcom:`universe` jobs, the new submit command
  :subcom:`arc_data_staging` can be used to supply additional elements
  to the DataStaging block of the ARC ADL that HTCondor constructs.
  :jira:`2774`

*** 24.0.4 bugs

- Fixed a bug in the negotiator that caused it to crash when matching
  offline ads.
  :jira:`2819`

- Fixed a memory leak in the schedd that could be caused by ``SCHEDD_CRON``
  scripts that generate standard error output.
  :jira:`2817`

- Fixed a bug that cause the *condor_schedd* to crash with a segmentation
  fault if a :tool:`condor_off` ``-fast`` command was run while a schedd cron
  script was running.
  :jira:`2815`
